/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_ROCKETSTATE_PB_H_INCLUDED
#define PB_ROCKETSTATE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _RocketState {
    /* Get the state of the rocket */
    int32_t rocket_state;
} RocketState;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define RocketState_init_default                 {0}
#define RocketState_init_zero                    {0}

/* Field tags (for use in manual encoding/decoding) */
#define RocketState_rocket_state_tag             1

/* Struct field encoding specification for nanopb */
#define RocketState_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    rocket_state,      1)
#define RocketState_CALLBACK NULL
#define RocketState_DEFAULT NULL

extern const pb_msgdesc_t RocketState_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define RocketState_fields &RocketState_msg

/* Maximum encoded size of messages (where known) */
#define RocketState_size                         11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
