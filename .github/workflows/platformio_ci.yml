name: CI -- Build Firmware
on:
  push:
    branches:
      - 'ci-firmware-build'  # Replace 'main' with your branch if different
  workflow_dispatch:  # This keeps the option to trigger manually

jobs:
  build:
    name: Create Firmware Artifacts
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: MIDAS
    strategy:
      matrix:
        env: [mcu_main_sustainer, mcu_main_booster] # Add envs here for more artifacts
    continue-on-error: true

    steps:
    - uses: actions/checkout@v3

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-pio-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Platformio Version
      run: pio --version
    - name: Build ${{ matrix.env }}
      run: pio run -e ${{ matrix.env }}
    - name: Upload Artifact for ${{ matrix.env }}
      uses: actions/upload-artifact@v2
      with:
        name: firmware-${{ matrix.env }}
        path: .pio/build/${{ matrix.env }}/firmware*.*

  # notify:
  #   name: Build Notifications
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: always()
  #   steps:
  #     - name: Slack Notification
  #       uses: rtCamp/action-slack-notify@v2
  #       env:
  #         SLACK_COLOR: ${{ needs.build.result }}
  #         SLACK_MESSAGE: "Matrix build completed with status: ${{ needs.build.result }}"
  #         SLACK_TITLE: "Firmware Matrix Build Summary: ${{ needs.build.result }}"
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}